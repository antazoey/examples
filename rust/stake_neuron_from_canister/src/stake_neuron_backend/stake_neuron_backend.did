type NeuronId = record { id : nat64 };
type Result = variant { Ok : Tokens; Err : text };
type Result_1 = variant { Ok : StakeNeuronResponse; Err : StakeNeuronError };
type StakeNeuronArgs = record {
  dissolve_delay_seconds : nat32;
  memo : nat64;
  amount_e8s : nat64;
};
type StakeNeuronError = variant {
  ClaimFailed : text;
  ConfigureFailed : text;
  InvalidPrincipal : text;
  GovernanceCallFailed : text;
  TransferFailed : text;
};
type StakeNeuronResponse = record {
  transfer_block_height : nat64;
  neuron_id : NeuronId;
};
type Tokens = record { e8s : nat64 };
service : {
  // Get the account identifier where users should send ICP to fund this canister
  get_canister_account : () -> (blob) query;
  // Get the current ICP balance of this canister
  get_canister_balance : () -> (Result);
  // Get information about minimum staking requirements
  get_staking_info : () -> (text) query;
  // Stake ICP tokens to create a new neuron with the specified dissolve delay
  stake_neuron : (StakeNeuronArgs) -> (Result_1);
}
